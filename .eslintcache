[{"C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\index.js":"1","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Firebase.js":"2","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\reportWebVitals.js":"3","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\App.js":"4","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Navbar.js":"5","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Sudoku.js":"6","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Login.js":"7","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Settings.js":"8","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\serviceWorkerRegistration.js":"9"},{"size":619,"mtime":1612014063415,"results":"10","hashOfConfig":"11"},{"size":2233,"mtime":1611941451400,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3108,"mtime":1612002229319,"results":"14","hashOfConfig":"11"},{"size":2047,"mtime":1611930773323,"results":"15","hashOfConfig":"11"},{"size":12464,"mtime":1612002376796,"results":"16","hashOfConfig":"11"},{"size":442,"mtime":1611685211094,"results":"17","hashOfConfig":"11"},{"size":4465,"mtime":1611942354425,"results":"18","hashOfConfig":"11"},{"size":5064,"mtime":499162500000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o3gkx3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\index.js",[],"C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Firebase.js",[],["43","44"],"C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\reportWebVitals.js",[],"C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\App.js",["45","46","47"],"import React, { useEffect, useState } from \"react\";\nimport { Router, Switch, Link, Route } from \"react-router-dom\";\nimport Sudoku from \"./Sudoku\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { appHistory } from \"./Navbar\";\nimport Login from \"./Login\";\nimport { RiSettings3Line } from \"react-icons/ri\";\nimport Settings from \"./Settings\";\nimport { Helmet } from \"react-helmet\";\n\nconst TitleComp = ({ title }) => {\n  const defaultTitle = \"δ Sudoku\";\n  return (\n    <Helmet>\n      <title>{title ? `δ Sudoku - ${title}` : defaultTitle}</title>\n    </Helmet>\n  );\n};\n\nconst withTitle = ({ ChildComp, title }) => (props) => (\n  <>\n    <TitleComp title={title} />\n    <ChildComp {...props} />\n  </>\n);\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n  const light = {\n    \"--primary-background\": \"white\",\n    \"--primary-color\": \"black\",\n  };\n  const dark = {\n    \"--primary-background\": \"rgb(29, 29, 29)\",\n    \"--primary-color\": \"white\",\n  };\n  const applyTheme = (nextTheme) => {\n    const theme = nextTheme === \"dark\" ? light : dark;\n    Object.keys(theme).map((key) => {\n      const value = theme[key];\n      document.documentElement.style.setProperty(key, value);\n    });\n  };\n  useEffect(() => {\n    let ls = localStorage.getItem(\"theme\");\n    if (ls) {\n      setTheme(ls);\n      applyTheme(ls === \"dark\" ? \"light\" : \"dark\");\n    }\n  }, []);\n  const Home = () => {\n    return (\n      <motion.div\n        className=\"home\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}>\n        <div>\n          <h1>δ Sudoku</h1>\n          <Link to=\"/game\">\n            <button className=\"newGame signOut\" style={{ width: \"100%\" }}>\n              Play\n            </button>\n          </Link>\n          <div>\n            <Link to=\"/settings\">\n              <button className=\"themeBut\" style={{ marginLeft: 0 }}>\n                <RiSettings3Line />\n              </button>\n            </Link>\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n  const Temp = () => {\n    useEffect(() => {\n      setTimeout(() => {\n        appHistory.goBack();\n      }, 100);\n    }, []);\n    return (\n      <div className=\"home\">\n        <div className=\"loader\"></div>\n      </div>\n    );\n  };\n  const HomeComp = withTitle({ ChildComp: Home });\n  const GameComp = withTitle({ ChildComp: Sudoku, title: \"Game\" });\n  const LoginComp = withTitle({ ChildComp: Login, title: \"Login\" });\n  const SettingsComp = withTitle({ ChildComp: Settings, title: \"Settings\" });\n  return (\n    <Router history={appHistory}>\n      <Switch>\n        <Route path=\"/\" exact>\n          <AnimatePresence>\n            <HomeComp />\n          </AnimatePresence>\n        </Route>\n        <Route path=\"/game\">\n          <GameComp />\n        </Route>\n        <Route path=\"/new\">\n          <Temp />\n        </Route>\n        <Route path=\"/login\">\n          <LoginComp />\n        </Route>\n        <Route path=\"/settings\">\n          <AnimatePresence>\n            <SettingsComp />\n          </AnimatePresence>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Navbar.js",["48","49"],"import React, { useEffect, useState } from \"react\";\r\nimport { AiFillBulb, AiOutlineBulb } from \"react-icons/ai\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport { RiSettings3Line } from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nexport const appHistory = createBrowserHistory();\r\nexport default function Navbar() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const light = {\r\n    \"--primary-background\": \"white\",\r\n    \"--primary-color\": \"black\",\r\n  };\r\n  const dark = {\r\n    \"--primary-background\": \"rgb(29, 29, 29)\",\r\n    \"--primary-color\": \"white\",\r\n  };\r\n  const applyTheme = (nextTheme) => {\r\n    const theme = nextTheme === \"dark\" ? light : dark;\r\n    Object.keys(theme).map((key) => {\r\n      const value = theme[key];\r\n      document.documentElement.style.setProperty(key, value);\r\n    });\r\n  };\r\n  const onClick = () => {\r\n    const nextTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(nextTheme);\r\n    applyTheme(theme);\r\n    localStorage.setItem(\"theme\", nextTheme);\r\n  };\r\n  useEffect(() => {\r\n    let ls = localStorage.getItem(\"theme\");\r\n    if (ls) {\r\n      setTheme(ls);\r\n      applyTheme(ls === \"dark\" ? \"light\" : \"dark\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <nav>\r\n      <Link to=\"/\">\r\n        <h1>δ Sudoku</h1>\r\n      </Link>\r\n      <div className=\"rightItems\">\r\n        <Link to=\"/new\">\r\n          <button className=\"newGame\">New Game</button>\r\n        </Link>\r\n        <button\r\n          title={`${theme === \"light\" ? \"Dark\" : \"Light\"} Theme`}\r\n          className=\"themeBut\"\r\n          onClick={onClick}>\r\n          {theme === \"light\" ? <AiOutlineBulb /> : <AiFillBulb />}\r\n        </button>\r\n        <Link to=\"/settings\">\r\n          <button className=\"themeBut\" title=\"Settings\">\r\n            <RiSettings3Line />\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <Link className=\"newGameFab\" to=\"/new\">\r\n        <button className=\"themeBut newGameFab\">\r\n          <MdAdd />\r\n        </button>\r\n      </Link>\r\n    </nav>\r\n  );\r\n}\r\n","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Sudoku.js",["50","51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firebaseInit } from \"./Firebase\";\r\n\r\nexport default function Sudoku() {\r\n  const [K, setK] = useState(19);\r\n  const [getIndex, setIndex] = useState({ row: 1, col: 1, used: false });\r\n  const [selected, setSelected] = useState(false);\r\n  const [value, setValue] = useState(-1);\r\n  const [stateChanged, setChange] = useState([{}]);\r\n  const [color, setColor] = useState(\"modColor\");\r\n  const [won, setWon] = useState(false);\r\n  const [anim, setAnim] = useState(true);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const ref = useRef(null);\r\n\r\n  let changed = [{ row: -1, col: -1 }];\r\n  let N = 9;\r\n  const [grid, setGrid] = useState(\r\n    Array(N)\r\n      .fill(0)\r\n      .map(() => Array(N))\r\n  );\r\n  const [unsolvedGrid, setUGrid] = useState([\r\n    Array(N)\r\n      .fill(0)\r\n      .map(() => Array(N)),\r\n  ]);\r\n  useEffect(() => {\r\n    firebaseInit();\r\n    let grid = Array(N)\r\n      .fill(0)\r\n      .map(() => Array(N));\r\n\r\n    let n = Math.sqrt(N);\r\n    function checkBox(row, col, num) {\r\n      for (let i = 0; i < n; i++) {\r\n        for (let j = 0; j < n; j++) {\r\n          if (grid[row + i][col + j] == num) return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    function fillBox(row, col) {\r\n      let num;\r\n      for (let i = 0; i < n; i++) {\r\n        for (let j = 0; j < n; j++) {\r\n          while (!checkBox(row, col, num)) {\r\n            num = Math.floor(Math.random() * N) + 1;\r\n          }\r\n          grid[row + i][col + j] = num;\r\n        }\r\n      }\r\n    }\r\n    function fillDiagonal() {\r\n      for (let i = 0; i < N; i += n) fillBox(i, i);\r\n    }\r\n    function checkRow(i, num) {\r\n      for (let j = 0; j < N; j++) {\r\n        if (grid[i][j] == num) return false;\r\n      }\r\n      return true;\r\n    }\r\n    function checkCol(j, num) {\r\n      for (let i = 0; i < N; i++) {\r\n        if (grid[i][j] == num) return false;\r\n      }\r\n      return true;\r\n    }\r\n    function checkSafe(i, j, num) {\r\n      return (\r\n        checkRow(i, num) &&\r\n        checkCol(j, num) &&\r\n        checkBox(i - (i % n), j - (j % n), num)\r\n      );\r\n    }\r\n    function fillRemaining(i, j) {\r\n      if (j >= N && i < N - 1) {\r\n        i += 1;\r\n        j = 0;\r\n      }\r\n      if (i >= N && j >= N) return true;\r\n      if (i < n) {\r\n        if (j < n) j = n;\r\n      } else if (i < N - n) {\r\n        if (j == Math.floor(i / n) * n) j += n;\r\n      } else {\r\n        if (j == N - n) {\r\n          i += 1;\r\n          j = 0;\r\n          if (i >= N) return true;\r\n        }\r\n      }\r\n      for (let num = 1; num <= N; num++) {\r\n        if (checkSafe(i, j, num)) {\r\n          grid[i][j] = num;\r\n          if (fillRemaining(i, j + 1)) return true;\r\n          grid[i][j] = 0;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    function removeKDigits() {\r\n      let count = K;\r\n      //setSeconds(0);\r\n      setSelected(false);\r\n      setValue(-1);\r\n      setIndex({ row: -1, col: -1, used: false });\r\n      setWon(false);\r\n      let mat = grid.map((el) => el.slice());\r\n      while (count != 0) {\r\n        let cellId = Math.floor(Math.random() * (N * N));\r\n        let i = Math.floor(cellId / N);\r\n        let j = cellId % N;\r\n        //if (j != 0) j -= 1;\r\n        if (i < 9 && j < 9 && mat[i][j] != \"\") {\r\n          mat[i][j] = \"\";\r\n          count--;\r\n          changed.push({ row: i, col: j });\r\n        }\r\n      }\r\n      console.log(\"Solved\", grid);\r\n      setChange(changed);\r\n      setGrid(grid);\r\n      setUGrid(mat);\r\n    }\r\n    function fillGrid() {\r\n      fillDiagonal();\r\n      fillRemaining(0, n);\r\n      removeKDigits();\r\n      //console.log(\"Unsolved\", unSolvedGrid);\r\n    }\r\n    fillGrid();\r\n  }, [K]);\r\n\r\n  const list = {\r\n    visible: { opacity: 1, transition: { staggerChildren: 0.1 } },\r\n    hidden: { opacity: 0 },\r\n  };\r\n  const Table = () => {\r\n    setTimeout(() => {\r\n      setAnim(false);\r\n    }, 1500);\r\n    return (\r\n      <motion.table className=\"sudoku\">\r\n        <tbody>\r\n          {unsolvedGrid.map((rows, index) => {\r\n            let row = rows.map((cell, index2) => (\r\n              <motion.td\r\n                variants={list}\r\n                onClick={() => {\r\n                  if (!won) {\r\n                    setSelected(true);\r\n                    setIndex({ row: index, col: index2, used: true });\r\n                    setValue(cell);\r\n                  }\r\n                }}\r\n                className={`element${\r\n                  value === cell && cell !== \"\" ? \" aqua\" : \"\"\r\n                }${\r\n                  selected && getIndex.col === index2 && getIndex.row === index\r\n                    ? \" selected\"\r\n                    : \"\"\r\n                } ${\r\n                  stateChanged.some(\r\n                    (change) => change.row === index && change.col === index2\r\n                  ) && K < 37\r\n                    ? color\r\n                    : \"\"\r\n                }`}\r\n                key={index2}>\r\n                <div className=\"content\">{cell}</div>\r\n              </motion.td>\r\n            ));\r\n            return (\r\n              <motion.tr\r\n                initial={anim ? \"hidden\" : \"\"}\r\n                animate=\"visible\"\r\n                variants={list}\r\n                className=\"row\"\r\n                key={index}>\r\n                {row}\r\n              </motion.tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </motion.table>\r\n    );\r\n  };\r\n  const NumPad = () => {\r\n    let row1 = [1, 2, 3];\r\n    let row2 = [4, 5, 6];\r\n    let row3 = [7, 8, 9];\r\n    let row4 = [...row1, ...row2, ...row3, \"×\"];\r\n\r\n    const Data = (props) => {\r\n      return (\r\n        <td\r\n          className=\"num\"\r\n          colSpan={props.data === \"×\" ? 3 : 1}\r\n          key={props.index}\r\n          onClick={() => {\r\n            let c = 0;\r\n            if (\r\n              stateChanged.some(\r\n                (change) =>\r\n                  change.row === getIndex.row && change.col === getIndex.col\r\n              ) &&\r\n              getIndex.row >= 0 &&\r\n              getIndex.col >= 0\r\n            ) {\r\n              let uMat = unsolvedGrid.map((el) => el.slice());\r\n              uMat[getIndex.row][getIndex.col] =\r\n                props.data === \"×\" ? \"\" : props.data;\r\n              if (grid[getIndex.row][getIndex.col] === props.data)\r\n                setColor(\"cellColor\");\r\n              else if (\r\n                grid[getIndex.row][getIndex.col] <= props.data + 2 &&\r\n                grid[getIndex.row][getIndex.col] >= props.data - 2\r\n              )\r\n                setColor(\"modColor\");\r\n              else setColor(\"wrongColor\");\r\n              setValue(props.data);\r\n              setUGrid(uMat);\r\n              for (let i = 0; i < N; i++) {\r\n                for (let j = 0; j < N; j++) {\r\n                  if (grid[i][j] === uMat[i][j]) {\r\n                    c++;\r\n                  }\r\n                }\r\n              }\r\n              //console.log(c);\r\n              if (c === N * N) {\r\n                setTimeout(() => {\r\n                  setWon(true);\r\n                  setColor(\"\");\r\n                  setSelected(false);\r\n                  setValue(-1);\r\n                }, 400);\r\n              }\r\n            }\r\n          }}>\r\n          {props.data}\r\n        </td>\r\n      );\r\n    };\r\n    return (\r\n      <motion.table\r\n        key=\"numPad\"\r\n        // initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ x: 90, opacity: 0 }}\r\n        className=\"numPad\">\r\n        <tbody className=\"l-scr\">\r\n          <tr>\r\n            {row1.map((data, index) => (\r\n              <Data key={index} data={data} index={index} />\r\n            ))}\r\n          </tr>\r\n          <tr>\r\n            {row2.map((data, index) => (\r\n              <Data key={index} data={data} index={3 + index} />\r\n            ))}\r\n          </tr>\r\n          <tr>\r\n            {row3.map((data, index) => (\r\n              <Data key={index} data={data} index={6 + index} />\r\n            ))}\r\n          </tr>\r\n          <tr>\r\n            <Data key={10} data=\"×\" index={10} />\r\n          </tr>\r\n        </tbody>\r\n        <tbody className=\"s-scr\">\r\n          <tr>\r\n            {row4.map((data, index) => (\r\n              <Data key={index} data={data} index={index} />\r\n            ))}\r\n          </tr>\r\n        </tbody>\r\n      </motion.table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"scrBody1\">\r\n        <AnimatePresence>\r\n          {!won ? (\r\n            <motion.div\r\n              className=\"tools\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}>\r\n              <Tools onSetK={setK} setAnim={setAnim} />\r\n              <Timer changed={K} setSeconds={setSeconds} />\r\n            </motion.div>\r\n          ) : (\r\n            <Timer2 seconds={seconds} K={K} />\r\n          )}\r\n        </AnimatePresence>\r\n        <AnimatePresence>\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            className=\"scrBody\">\r\n            <Table />\r\n            <AnimatePresence initial={false}>\r\n              {!won && <NumPad />}\r\n            </AnimatePresence>\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nfunction useEffectSkipFirst(fn, arr) {\r\n  const isFirst = useRef(true);\r\n  useEffect(() => {\r\n    if (isFirst.current) {\r\n      isFirst.current = false;\r\n      return;\r\n    }\r\n    return fn();\r\n  }, arr);\r\n}\r\nconst Timer2 = ({ seconds, K }) => {\r\n  const [show, setShow] = useState(false);\r\n  useEffectSkipFirst(() => {\r\n    const db = firebase.firestore();\r\n    let user = firebase.auth().currentUser;\r\n    if (user) {\r\n      let docRef = db.collection(user.uid);\r\n      const { serverTimestamp } = firebase.firestore.FieldValue;\r\n      docRef\r\n        .add({\r\n          date: serverTimestamp(),\r\n          time: seconds,\r\n          difficulty: K,\r\n        })\r\n        .then(() => {\r\n          console.log(\"updated\");\r\n        })\r\n        .catch((err) => console.error(err));\r\n    } else setShow(true);\r\n  }, [seconds]);\r\n  return (\r\n    <motion.div\r\n      className=\"tools time\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1, transition: { delay: 0.2 } }}\r\n      exit={{ opacity: 0 }}>\r\n      {show && (\r\n        <p>\r\n          <Link\r\n            to=\"/login\"\r\n            style={{ textDecoration: \"underline\", color: \"Highlight\" }}>\r\n            Sign in\r\n          </Link>{\" \"}\r\n          to keep track of scores\r\n        </p>\r\n      )}\r\n      <p style={{ fontWeight: \"bold\", marginTop: \"10px\" }}>{seconds}s</p>\r\n    </motion.div>\r\n  );\r\n};\r\nconst Timer = (props) => {\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [change, setChange] = useState(0);\r\n\r\n  const time = (time) => {\r\n    let date = new Date(0);\r\n    date.setSeconds(time);\r\n    return date.toISOString().substr(11, 8);\r\n  };\r\n  const handleSec = useCallback(\r\n    (s) => {\r\n      props.setSeconds(s);\r\n    },\r\n    [props.setSeconds]\r\n  );\r\n  useEffect(() => {\r\n    let s = 0;\r\n    setChange(props.changed);\r\n    setSeconds(0);\r\n    //Timer\r\n    let interval = setInterval(() => {\r\n      setSeconds((seconds) => seconds + 1);\r\n      s++;\r\n    }, 1000);\r\n    return () => {\r\n      handleSec(s);\r\n      clearInterval(interval);\r\n    };\r\n  }, [props.changed, props.won]);\r\n  return <div className=\"timer\">{time(seconds)}</div>;\r\n};\r\nconst Tools = (props) => {\r\n  const [val, setVal] = useState(\"Easy\");\r\n  const handleChange = (e) => {\r\n    setVal(e.target.value);\r\n  };\r\n  const handleK = useCallback(\r\n    (e) => {\r\n      if (e.target.value === \"Easy\") props.onSetK(19);\r\n      if (e.target.value === \"Medium\") props.onSetK(28);\r\n      if (e.target.value === \"Hard\") props.onSetK(37);\r\n      if (e.target.value === \"Insane\") props.onSetK(64);\r\n      props.setAnim(true);\r\n    },\r\n    [props.onSetK, props.setAnim]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <select\r\n        className=\"dropdown\"\r\n        value={val}\r\n        onChange={(e) => {\r\n          handleChange(e);\r\n          handleK(e);\r\n        }}>\r\n        <option value=\"Easy\">Easy</option>\r\n        <option value=\"Medium\">Medium</option>\r\n        <option value=\"Hard\">Hard</option>\r\n        <option value=\"Insane\">Insane</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Login.js",[],"C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\Settings.js",["65"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdChevronLeft } from \"react-icons/md\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { signOut } from \"./Firebase\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Settings() {\r\n  const [signedIn, setSignedIn] = useState(false);\r\n  const [show, setShow] = useState(true);\r\n  const [user, setUser] = useState({ photoURL: \"\", displayName: \"\" });\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    let docRef, unsubscribe;\r\n    const db = firebase.firestore();\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setShow(false);\r\n        setSignedIn(true);\r\n        setUser(user);\r\n        docRef = db.collection(user.uid);\r\n        unsubscribe = docRef.orderBy(\"date\", \"desc\").onSnapshot((query) => {\r\n          setData(query.docs);\r\n        });\r\n      } else {\r\n        setShow(false);\r\n        unsubscribe && unsubscribe();\r\n      }\r\n    });\r\n    if (firebase.auth().currentUser) setShow(false);\r\n  }, []);\r\n  const SignedIn = () => {\r\n    const diff = (str) => {\r\n      let res = \"Easy\";\r\n      if (str === 19) res = \"Easy\";\r\n      if (str === 28) res = \"Medium\";\r\n      if (str === 37) res = \"Hard\";\r\n      if (str === 64) res = \"Insane\";\r\n      return res;\r\n    };\r\n    const time = (time) => {\r\n      let date = new Date(0);\r\n      date.setSeconds(time);\r\n      return date.toISOString().substr(11, 8);\r\n    };\r\n    const Scores = () => {\r\n      const onClick = (id) => {\r\n        const db = firebase.firestore();\r\n        const auth = firebase.auth();\r\n        db.collection(auth.currentUser.uid)\r\n          .doc(id)\r\n          .delete()\r\n          .then(() => console.log(\"Deleted\"))\r\n          .catch((err) => console.error(err));\r\n      };\r\n\r\n      return (\r\n        <div className=\"scores\">\r\n          {data.map((doc, i) => {\r\n            return (\r\n              <div key={doc.id} className=\"settingsBanner\">\r\n                <p>{`${\r\n                  i + 1\r\n                }. ${doc.data().date.toDate().toDateString()}\\t(${diff(\r\n                  doc.data().difficulty\r\n                )})`}</p>\r\n                <div className=\"rightItems\">\r\n                  <p>{`${time(doc.data().time)}`}</p>\r\n                  <button\r\n                    className=\"themeBut\"\r\n                    title=\"Delete\"\r\n                    onClick={() => {\r\n                      onClick(doc.id);\r\n                    }}>\r\n                    <AiOutlineDelete />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    };\r\n    return (\r\n      <motion.div\r\n        className=\"home2\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}>\r\n        <div className=\"settingsBanner\">\r\n          <div className=\"leftItems\">\r\n            <Link to=\"/game\">\r\n              <h2 style={{ display: \"flex\" }}>\r\n                <MdChevronLeft />\r\n              </h2>\r\n            </Link>\r\n            <img className=\"pfp\" src={user.photoURL} />\r\n            <h4>{user.displayName}</h4>\r\n          </div>\r\n          <button\r\n            className=\"newGame signOut\"\r\n            onClick={() => {\r\n              signOut();\r\n            }}>\r\n            Sign Out\r\n          </button>\r\n        </div>\r\n        {data.length > 0 ? (\r\n          <Scores />\r\n        ) : (\r\n          <p className=\"pText\">No games played</p>\r\n        )}\r\n      </motion.div>\r\n    );\r\n  };\r\n  return signedIn ? <SignedIn /> : show ? <Loader /> : <SignedOut />;\r\n}\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <motion.div\r\n      className=\"home\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}>\r\n      <div className=\"loader\"></div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst SignedOut = () => {\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className=\"home\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}>\r\n        <h2>\r\n          <Link\r\n            style={{ textDecoration: \"underline\", color: \"Highlight\" }}\r\n            to=\"/login\">\r\n            Sign in\r\n          </Link>{\" \"}\r\n          to keep track of scores\r\n        </h2>\r\n        <Link to=\"/game\">{\"<\"} Go Back</Link>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\amaan\\Documents\\VS Code Projects\\sudoku\\src\\serviceWorkerRegistration.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":27,"column":10,"nodeType":"72","messageId":"73","endLine":27,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":38,"column":34,"nodeType":"76","messageId":"77","endLine":38,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":49,"column":6,"nodeType":"80","endLine":49,"endColumn":8,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"75","line":20,"column":34,"nodeType":"76","messageId":"77","endLine":20,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":37,"column":6,"nodeType":"80","endLine":37,"endColumn":8,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"83","line":20,"column":9,"nodeType":"72","messageId":"73","endLine":20,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":44,"column":38,"nodeType":"86","messageId":"87","endLine":44,"endColumn":40},{"ruleId":"84","severity":1,"message":"85","line":65,"column":24,"nodeType":"86","messageId":"87","endLine":65,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":71,"column":24,"nodeType":"86","messageId":"87","endLine":71,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":91,"column":15,"nodeType":"86","messageId":"87","endLine":91,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":93,"column":15,"nodeType":"86","messageId":"87","endLine":93,"endColumn":17},{"ruleId":"84","severity":1,"message":"88","line":116,"column":20,"nodeType":"86","messageId":"87","endLine":116,"endColumn":22},{"ruleId":"84","severity":1,"message":"88","line":121,"column":41,"nodeType":"86","messageId":"87","endLine":121,"endColumn":43},{"ruleId":"78","severity":1,"message":"89","line":139,"column":6,"nodeType":"80","endLine":139,"endColumn":9,"suggestions":"90"},{"ruleId":"78","severity":1,"message":"91","line":331,"column":6,"nodeType":"72","endLine":331,"endColumn":9},{"ruleId":"78","severity":1,"message":"92","line":331,"column":6,"nodeType":"72","endLine":331,"endColumn":9,"suggestions":"93"},{"ruleId":"70","severity":1,"message":"94","line":375,"column":10,"nodeType":"72","messageId":"73","endLine":375,"endColumn":16},{"ruleId":"78","severity":1,"message":"95","line":386,"column":5,"nodeType":"80","endLine":386,"endColumn":23,"suggestions":"96"},{"ruleId":"78","severity":1,"message":"97","line":401,"column":6,"nodeType":"80","endLine":401,"endColumn":32,"suggestions":"98"},{"ruleId":"78","severity":1,"message":"95","line":417,"column":5,"nodeType":"80","endLine":417,"endColumn":34,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":100,"column":13,"nodeType":"102","endLine":100,"endColumn":56},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'applyTheme'. Either include it or remove the dependency array.","ArrayExpression",["105"],["106"],"'ref' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'N' and 'changed'. Either include them or remove the dependency array.",["107"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array. If 'fn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],"'change' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["109"],"React Hook useEffect has a missing dependency: 'handleSec'. Either include it or remove the dependency array.",["110"],["111"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"112","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"119","fix":"123"},"Update the dependencies array to be: [applyTheme]",{"range":"124","text":"125"},{"range":"126","text":"125"},"Update the dependencies array to be: [K, N, changed]",{"range":"127","text":"128"},"Update the dependencies array to be: [fn]",{"range":"129","text":"130"},"Update the dependencies array to be: [props]",{"range":"131","text":"132"},"Update the dependencies array to be: [handleSec, props.changed, props.won]",{"range":"133","text":"134"},{"range":"135","text":"132"},[1370,1372],"[applyTheme]",[1236,1238],[3909,3912],"[K, N, changed]",[9644,9647],"[fn]",[11149,11167],"[props]",[11474,11500],"[handleSec, props.changed, props.won]",[12017,12046]]